{"version":3,"sources":["reducers/index.js","store/configureStore.js","components/TopBar.jsx","actions/index.js","components/dropdownCategories.jsx","components/dropdownMeals.jsx","components/randomRestaurant/Form.jsx","components/tagMeal.jsx","components/tagCategory.jsx","components/randomRestaurant/resultCard.jsx","containers/RandomRestaurant.jsx","components/directory/yelp/Form.jsx","components/directory/yelp/Results.jsx","components/directory/yelp/Result.jsx","components/directory/addedRestaurant.jsx","components/checkboxMeals.jsx","components/directory/deleteRestaurantButton.jsx","components/directory/directoryList.jsx","components/restaurantOptions.jsx","containers/Directory.jsx","App.jsx","registerServiceWorker.js","index.js"],"names":["defaultInitialState","meal","categories","directoryList","defaultRestaurantState","restaurant","defaultUIState","showForm","showResult","editMode","defaultYelpSearchState","results","total","defaultAddRestaurantState","addedRestaurant","defaultCheckboxState","selectedCheckboxes","defaultCategorySelectionState","categoriesSelection","combineReducers","fetchInitialState","state","arguments","length","undefined","action","type","Object","objectSpread","data","content","fetchRandomRestaurant","mealSelection","uiReducer","yelpSearch","displayAddedRestaurant","checkboxSelection","concat","toConsumableArray","index","indexOf","arr","splice","categorySelection","logger","createLogger","collapsed","store","createStore","rootReducer","compose","applyMiddleware","thunk","window","devToolsExtension","f","TopBar","react_default","a","createElement","className","Link","to","Component","updateAddedRestaurant","payload","dispatch","fetch","id","method","body","JSON","stringify","selectedMeal","category","selectedCategories","headers","content-type","then","res","json","restaurants","catch","err","_updateAddedRestaurantAjaxCall","deleteAddedRestaurant","_deleteAddedRestaurantAjaxCall","addRestaurant","address","location","display_address","name","_addRestaurantAjaxCall","_makeRandomRestaurantAjaxCall","searchYelp","keyword","yelp","businesses","_makeYelpAjaxCall","DropdownCategories","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","value","handleChange","bind","assertThisInitialized","props","selected","setState","e","_this2","target","handleCategoryChange","onChange","map","i","key","DropdownMeals","handleMealChange","GetRandomRestaurantForm","showMeals","showSubmit","handleSubmit","preventDefault","getRandomRestaurant","onSubmit","dropdownCategories","dropdownMeals","TagMeal","TagCategory","ResultCard","tagMeal","tagCategory","RandomRestaurant","startOver","tryAgain","params","actions","randomRestaurant_Form","onClick","resultCard","connect","Form","Results","children","Result","AddedRestaurant","CheckboxMeals","htmlFor","onCheckboxClick","defaultChecked","DeleteRestaurantButton","onDeleteClick","DirectoryList","RestaurantOptions","onEditClick","onSaveClick","onCancelClick","event","checked","prevState","includeEditButton","Fragment","checkboxMeals","checkboxmeal","checkboxes","savetype","Directory","addButtonClick","getAttribute","obj","yelp_Form","yelp_Results","yelp_Result","restaurantOptions","deleteRestaurantButton","App","BrowserRouter","components_TopBar","Switch","Route","path","component","containers_RandomRestaurant","exact","containers_Directory","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","error","promises","Promise","all","item","result","ReactDOM","render","es","src_App_0","document","getElementById","URL","process","origin","addEventListener","response","status","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.89506435.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\n\nlet defaultInitialState = {\n    meal: false,\n    categories: false,\n    directoryList: false\n};\n\nfunction fetchInitialState(state = defaultInitialState, action) {\n    switch (action.type) {\n        case \"FETCH_INITIAL_STATE\":\n            return {\n                ...state,\n                meal: action.data.meal,\n                categories: action.data.categories,\n                directoryList: action.data.directoryList\n            };\n        case \"GET_ALL_DIRECTORY_RESTAURANTS_SUCCESS\":\n            return {\n                ...state,\n                directoryList: action.data.content\n            };\n        default:\n            return state;\n    }\n}\n\nlet defaultRestaurantState = {\n    restaurant: false\n};\nfunction fetchRandomRestaurant(state = defaultRestaurantState, action) {\n    switch (action.type) {\n        case \"RECEIVED_RANDOM_RESTAURANT_SUCCESS\":\n            return {\n                ...state,\n                restaurant: action.data.restaurant,\n                mealSelection: action.data.meal,\n                categoriesSelection: action.data.categories\n            };\n        case \"UNSET_RESTAURANT\":\n            return {\n                ...state,\n                restaurant: false,\n                mealSelection: false,\n                categoriesSelection: false\n            };\n        default:\n            return state;\n    }\n}\n\nconst defaultUIState = {\n    showForm: true,\n    showResult: false,\n    editMode: false\n};\n\nfunction uiReducer(state = defaultUIState, action) {\n    switch (action.type) {\n        case \"SHOW_FORM\":\n            return {\n                ...state,\n                showForm: true\n            };\n        case \"HIDE_FORM\":\n            return {\n                ...state,\n                showForm: false\n            };\n        case \"SHOW_RESULT\":\n            return {\n                ...state,\n                showResult: true\n            };\n        case \"HIDE_RESULT\":\n            return {\n                ...state,\n                showResult: false\n            };\n        default:\n            return state;\n    }\n}\n\nconst defaultYelpSearchState = {\n    results: false,\n    total: 0\n};\nfunction yelpSearch(state = defaultYelpSearchState, action) {\n    switch (action.type) {\n        case \"RECEIVED_YELP_RESPONSE_SUCCESS\":\n            return {\n                ...state,\n                results: action.data.results,\n                total: action.data.total\n            };\n        case \"YELP_SEARCH_RESET\":\n        return {\n            ...state,\n            results: false,\n            total: 0\n        };        \n        default:\n            return state;\n    }\n}\n\nconst defaultAddRestaurantState = {\n    addedRestaurant: false\n};\n\nfunction displayAddedRestaurant(state = defaultAddRestaurantState, action) {\n    switch (action.type) {\n        case \"DISPLAY_ADDED_RESTAURANT\":\n            return {\n                ...state,\n                addedRestaurant: action.data\n            };\n        case \"REMOVE_ADDED_RESTAURANT\":\n            return {\n                ...state,\n                addedRestaurant: false\n            };\n        default:\n            return state;\n    }\n}\n\nconst defaultCheckboxState = {\n    selectedCheckboxes: []\n};\n\nfunction checkboxSelection(state = defaultCheckboxState, action) {\n    switch (action.type) {\n        case \"ADD_CHECKBOX_SELECTION\":\n            return {\n                ...state,\n                selectedCheckboxes: [...state.selectedCheckboxes, action.data]\n            };\n        case \"REMOVE_CHECKBOX_SELECTION\":\n            let index = state.selectedCheckboxes.indexOf(action.data);\n            let arr = state.selectedCheckboxes;\n            arr.splice(index, 1);\n\n            return {\n                ...state,\n                selectedCheckboxes: arr\n            };\n        default:\n            return state;\n    }\n}\n\nconst defaultCategorySelectionState = {\n    categoriesSelection: false\n};\n\nfunction categorySelection(state = defaultCategorySelectionState, action) {\n    switch (action.type) {\n        case \"ADD_CATEGORY_SELECTION\":\n            return {\n                ...state,\n                categoriesSelection: action.data\n            };\n        default:\n            return state;\n    }\n}\n\nexport default combineReducers({\n    fetchInitialState: fetchInitialState,\n    fetchRandomRestaurant: fetchRandomRestaurant,\n    uiReducer: uiReducer,\n    yelpSearch: yelpSearch,\n    displayAddedRestaurant: displayAddedRestaurant,\n    checkboxSelection: checkboxSelection,\n    categorySelection: categorySelection\n});\n","import { applyMiddleware, compose, createStore } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from '../reducers';\n\nvar logger = createLogger({\n    collapsed: true\n});\n\nvar store = createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(thunk, logger),\n        window.devToolsExtension ? window.devToolsExtension() : f => f\n    )\n);\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass TopBar extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row align-items-center justify-content-between\">\n          <h1>\n            <Link to=\"/\" className=\"button-primary\">\n              I don't feel like cooking!\n            </Link>\n          </h1>\n          <Link to=\"/directory\" className=\"button-primary\">\n            Directory\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TopBar;\n","import fetch from \"fetch-everywhere\";\n\nexport function updateAddedRestaurant(payload) {\n    return dispatch => {\n        _updateAddedRestaurantAjaxCall(payload, dispatch);\n    };\n}\n\nfunction _updateAddedRestaurantAjaxCall(payload, dispatch) {\n    dispatch({ type: \"UPDATE_ADDED_RESTAURANT_REQUEST\" });\n\n    fetch(`api/restaurant/update/${payload.id}`, {\n        method: \"PUT\",\n        body: JSON.stringify({\n            meal: payload.selectedMeal,\n            category: payload.selectedCategories\n        }),\n        headers: {\n            \"content-type\": \"application/json\"\n        }\n    })\n        .then(res => res.json())\n        .then(restaurant => {\n            dispatch({ type: \"UPDATE_ADDED_RESTAURANT_SUCCESS\" });\n\n            if(payload.type === \"yelp\") {\n                dispatch({ type: \"REMOVE_ADDED_RESTAURANT\" });\n                dispatch({ type: \"YELP_SEARCH_RESET\" });\n            }\n\n            dispatch({ type: \"GET_ALL_DIRECTORY_RESTAURANTS_REQUEST\" });\n\n            fetch(`api/restaurants/list/`)\n                .then(res => res.json())\n                .then(restaurants => {\n                    dispatch({\n                        type: \"GET_ALL_DIRECTORY_RESTAURANTS_SUCCESS\",\n                        data: restaurants\n                    });\n                })\n                .catch(err => {\n                    dispatch({\n                        type: \"GET_ALL_DIRECTORY_RESTAURANTS_FAILURE\",\n                        data: err\n                    });\n                });\n        })\n        .catch(err => {\n            dispatch({ type: \"UPDATE_ADDED_RESTAURANT_FAILURE\", data: err });\n        });\n}\n\nexport function deleteAddedRestaurant(payload) {\n    return dispatch => {\n        _deleteAddedRestaurantAjaxCall(payload, dispatch);\n    };\n}\n\nfunction _deleteAddedRestaurantAjaxCall(payload, dispatch) {\n    dispatch({ type: \"DELETE_ADDED_RESTAURANT_REQUEST\" });\n\n    fetch(`api/delete/restaurant/${payload}`, {\n        method: \"DELETE\",\n        headers: {\n            \"content-type\": \"application/json\"\n        }\n    })\n        .then(() => {\n            dispatch({\n                type: \"DELETE_ADDED_RESTAURANT_SUCCESS\"\n            });\n\n            dispatch({ type: \"GET_ALL_DIRECTORY_RESTAURANTS_REQUEST\" });\n\n            fetch(`api/restaurants/list/`)\n                .then(res => res.json())\n                .then(restaurants => {\n                    dispatch({\n                        type: \"GET_ALL_DIRECTORY_RESTAURANTS_SUCCESS\",\n                        data: restaurants\n                    });\n                })\n                .catch(err => {\n                    dispatch({\n                        type: \"GET_ALL_DIRECTORY_RESTAURANTS_FAILURE\",\n                        data: err\n                    });\n                });\n        })\n        .catch(err => {\n            dispatch({ type: \"DELETE_ADDED_RESTAURANT_FAILURE\", data: err });\n        });\n}\n\nexport function addRestaurant(payload) {\n    return dispatch => {\n        _addRestaurantAjaxCall(payload, dispatch);\n    };\n}\n\nfunction _addRestaurantAjaxCall(payload, dispatch) {\n    dispatch({ type: \"ADD_RESTAURANT_REQUEST\" });\n\n    let address = `${payload.location.display_address[0]} ${\n        payload.location.display_address[1]\n    }`;\n\n    fetch(`/api/restaurant/add/`, {\n        method: \"POST\",\n        body: JSON.stringify({\n            name: payload.name,\n            address: address\n        }),\n        headers: {\n            \"content-type\": \"application/json\"\n        }\n    })\n        .then(res => res.json())\n        .then(restaurant => {\n            dispatch({\n                type: \"DISPLAY_ADDED_RESTAURANT\",\n                data: restaurant\n            });\n        })\n        .catch(err => {\n            dispatch({ type: \"ADDED_RESTAURANT_FAILURE\", data: err });\n        });\n}\n\nexport function fetchRandomRestaurant(payload) {\n    return dispatch => {\n        _makeRandomRestaurantAjaxCall(payload, dispatch);\n    };\n}\n\nfunction _makeRandomRestaurantAjaxCall(payload, dispatch) {\n    dispatch({ type: \"REQUEST_RANDOM_RESTAURANT\", data: payload });\n\n    fetch(`/api/restaurant/random/${payload.categories}/${payload.meal}`)\n        .then(res => res.json())\n        .then(restaurant => {\n            dispatch({\n                type: \"RECEIVED_RANDOM_RESTAURANT_SUCCESS\",\n                data: {\n                    restaurant: restaurant,\n                    meal: payload.meal,\n                    categories: payload.categories\n                }\n            });\n        })\n        .catch(err => {\n            dispatch({ type: \"RECEIVED_RANDOM_RESTAURANT_FAILURE\", data: err });\n        });\n}\n\n\nexport function addCheckboxSelection(payload) {\n    return {\n        type: \"ADD_CHECKBOX_SELECTION\",\n        data: payload\n    };\n}\nexport function removeCheckboxSelection(payload) {\n    return {\n        type: \"REMOVE_CHECKBOX_SELECTION\",\n        data: payload\n    };\n}\nexport function addCategorySelection(payload) {\n    return {\n        type: \"ADD_CATEGORY_SELECTION\",\n        data: payload\n    };\n}\nexport function showForm() {\n    return {\n        type: \"SHOW_FORM\"\n    };\n}\n\nexport function hideForm() {\n    return {\n        type: \"HIDE_FORM\"\n    };\n}\n\nexport function showResult() {\n    return {\n        type: \"SHOW_RESULT\"\n    };\n}\n\nexport function hideResult() {\n    return {\n        type: \"HIDE_RESULT\"\n    };\n}\n\nexport function searchYelp(payload) {\n    return dispatch => {\n        _makeYelpAjaxCall(payload, dispatch);\n    };\n}\n\nfunction _makeYelpAjaxCall(keyword, dispatch) {\n    dispatch({ type: \"REQUEST_YELP_API\" });\n\n    fetch(`/api/search/restaurants/${keyword}`)\n        .then(res => res.json())\n        .then(yelp => {\n            dispatch({\n                type: \"RECEIVED_YELP_RESPONSE_SUCCESS\",\n                data: { results: yelp.businesses, total: yelp.total }\n            });\n        })\n        .catch(err => {\n            dispatch({ type: \"RECEIVED_YELP_RESPONSE_FAILURE\", data: err });\n        });\n}\n","import React, { Component } from \"react\";\n\nclass DropdownCategories extends Component {\n    constructor() {\n        super();\n        this.state = {\n            value: false\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n    componentDidMount() {\n        if (this.props.selected) {\n            this.setState({\n                value: this.props.selected\n            });\n        }\n    }\n    handleChange(e) {\n        this.setState(\n            {\n                value: e.target.value\n            },\n            () => {\n                this.props.handleCategoryChange(this.state.value);\n            }\n        );\n    }\n    render() {\n        return (\n            <select\n                className=\"form-control\"\n                name=\"categories\"\n                id=\"categories\"\n                onChange={this.handleChange}\n                value={this.state.value}\n            >\n                <option value=\"\">Select a category</option>\n                {this.props.categories.map((i, index) => {\n                    return (\n                        <option value={i.category} key={index}>\n                            {i.category}\n                        </option>\n                    );\n                })}\n            </select>\n        );\n    }\n}\nexport default DropdownCategories;\n","import React from \"react\";\n\nfunction DropdownMeals(props) {\n    const handleChange = e => {\n        props.handleMealChange(e);\n    };\n    \n    return (\n        \n        <select\n            className=\"form-control\"\n            name=\"meal\"\n            id=\"meal\"\n            onChange={handleChange}\n        >\n            <option value=\"\">Select a meal</option>\n            {props.meal.map((i, index) => {\n                return (\n                    <option value={i.type} key={index}>\n                        {i.type}\n                    </option>\n                );\n            })}\n        </select>\n    );\n}\nexport default DropdownMeals;\n","import React, { Component } from \"react\";\nimport DropdownCategories from \"../dropdownCategories\";\nimport DropdownMeals from \"../dropdownMeals\";\n\nclass GetRandomRestaurantForm extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            showMeals: false,\n            showSubmit: false\n        };\n\n        this.handleCategoryChange = this.handleCategoryChange.bind(this);\n        this.handleMealChange = this.handleMealChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleCategoryChange(e) {\n        this.setState({ showMeals: true });\n    }\n    handleMealChange(e) {\n        this.setState({ showSubmit: true });\n    }\n    handleSubmit(e) {\n        e.preventDefault();\n\n        this.props.getRandomRestaurant({\n            meal: e.target.meal.value,\n            categories: e.target.categories.value\n        });\n    }\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <DropdownCategories categories={this.props.categories} handleCategoryChange={this.handleCategoryChange} />\n\n                {this.state.showMeals && (\n                    <DropdownMeals meal={this.props.meal} handleMealChange={this.handleMealChange} />\n                )}\n\n                {this.state.showSubmit && (\n                    <input type=\"submit\" value=\"Submit\" className=\"btn btn-outline-primary\"/>\n                )}\n            </form>\n        );\n    }\n}\n\nexport default GetRandomRestaurantForm;\n","import React from \"react\";\n\nfunction TagMeal(props) {\n    return (\n        <span className=\"badge badge-primary\">{props.meal}</span>\n    );\n}\n\nexport default TagMeal;","import React from \"react\";\n\nfunction TagCategory(props) {\n    return (\n        <span className=\"badge badge-secondary\">{props.category}</span>\n    );\n}\n\nexport default TagCategory;","import React from \"react\";\nimport TagMeal from \"../tagMeal\";\nimport TagCategory from \"../tagCategory\";\nfunction ResultCard(props) {\n    return (\n        <div className=\"card\">\n            <div className=\"card-body\">\n                <h3 className=\"card-title\">{props.restaurant.name}</h3>\n                <div className=\"card-text\">{props.restaurant.address}</div>\n                {props.restaurant.meal.map((i, index) => {\n                    return <TagMeal key={index} meal={i} />;\n                })}\n                <TagCategory category={props.restaurant.category} />\n            </div>\n        </div>\n    );\n}\n\nexport default ResultCard;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions\";\nimport GetRandomRestaurantForm from \"../components/randomRestaurant/Form\";\nimport RandomRestaurantResultCard from \"../components/randomRestaurant/resultCard\";\n// import TagMeal from \"../components/tagMeal\";\n// import TagCategory from \"../components/tagCategory\";\n\nclass RandomRestaurant extends Component {\n    constructor(props) {\n        super(props);\n        this.getRandomRestaurant = this.getRandomRestaurant.bind(this);\n        this.startOver = this.startOver.bind(this);\n        this.tryAgain = this.tryAgain.bind(this);\n    }\n\n    getRandomRestaurant(params) {\n        let payload = {\n            meal: params.meal,\n            categories: params.categories\n        };\n\n        this.props.dispatch(actions.fetchRandomRestaurant(payload));\n        this.props.dispatch(actions.hideForm());\n        this.props.dispatch(actions.showResult());\n        this.props.dispatch({ type: \"UNSET_RESTAURANT\" });\n    }\n\n    startOver() {\n        this.props.dispatch(actions.showForm());\n        this.props.dispatch(actions.hideResult());\n    }\n    tryAgain() {\n        this.getRandomRestaurant({\n            meal: this.props.mealSelection,\n            categories: this.props.categoriesSelection\n        });\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                {this.props.categories &&\n                    this.props.meal &&\n                    this.props.showForm && (\n                        <GetRandomRestaurantForm\n                            getRandomRestaurant={this.getRandomRestaurant}\n                            categories={this.props.categories}\n                            meal={this.props.meal}\n                        />\n                    )}\n\n                {this.props.restaurant &&\n                    this.props.showResult && (\n                        <div>\n                            <button\n                                className=\"btn btn-outline-primary\"\n                                onClick={this.tryAgain}\n                            >\n                                Try again\n                            </button>\n                            <button\n                                className=\"btn btn-outline-primary\"\n                                onClick={this.startOver}\n                            >\n                                Start over\n                            </button>\n                            <RandomRestaurantResultCard restaurant={this.props.restaurant} />\n                        </div>\n                    )}\n            </div>\n        );\n    }\n}\n\nexport default connect((state, props) => {\n    return {\n        meal: state.fetchInitialState.meal,\n        mealSelection: state.fetchRandomRestaurant.mealSelection,\n        categoriesSelection: state.fetchRandomRestaurant.categoriesSelection,\n        showForm: state.uiReducer.showForm,\n        showResult: state.uiReducer.showResult,\n        restaurant: state.fetchRandomRestaurant.restaurant\n    };\n})(RandomRestaurant);\n","import React from \"react\";\n\nconst Form = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <input type=\"text\" name=\"keyword\" />\n            <input className=\"btn btn-primary\" type=\"submit\" />\n        </form>\n    \n    )\n}\n\nexport default Form;","import React from \"react\";\n\nfunction Results(props) {\n    return (\n        <div className=\"list-group\">\n            {props.children}\n        </div>\n    );\n}\n\nexport default Results;","import React from \"react\";\n\nfunction Result(props) {\n    return (\n        <div className=\"list-group-item\">\n            <div>{props.name}</div>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Result;\n","import React from \"react\";\n\nconst AddedRestaurant = (props) => {\n    \n    return (\n        <div className=\"list-group-item\">\n            <div>{props.restaurant.name}</div>\n            <div>{props.restaurant.address}</div>\n            {props.children}\n        </div>\n    \n    )\n}\n\nexport default AddedRestaurant;","import React from \"react\";\n\nfunction CheckboxMeals(props) {\n    if (props.selected) {\n        return (\n            <div>\n                {props.meal.map((i, index) => {\n                    return (\n                        <div key={index} className=\"checkbox\">\n                            {props.selected.indexOf(i.type) !== -1 && (\n                                <label key={index} htmlFor=\"\">\n                                    <input\n                                        onClick={props.onCheckboxClick}\n                                        type=\"checkbox\"\n                                        value={i.type}\n                                        defaultChecked=\"true\"\n                                    />\n                                    {i.type}\n                                </label>\n                            )}\n                            {props.selected.indexOf(i.type) === -1 && (\n                                <label key={index} htmlFor=\"\">\n                                    <input\n                                        onClick={props.onCheckboxClick}\n                                        type=\"checkbox\"\n                                        value={i.type}\n                                    />\n                                    {i.type}\n                                </label>\n                            )}\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                {props.meal.map((i, index) => {\n                    return (\n                        <div key={index} className=\"checkbox\">\n                            <label key={index} htmlFor=\"\">\n                                <input\n                                    onClick={props.onCheckboxClick}\n                                    type=\"checkbox\"\n                                    value={i.type}\n                                />\n                                {i.type}\n                            </label>\n                        </div>\n                    );\n                })}\n            </div>\n        )\n    }\n}\nexport default CheckboxMeals;\n","import React from \"react\";\n\nfunction DeleteRestaurantButton(props) {\n    return (\n        <div>\n            <button\n                className=\"btn btn-primary\"\n                onClick={props.onDeleteClick}\n                id={props.id}\n            >\n                \n                Delete\n            </button>\n        </div>\n    );\n}\n\nexport default DeleteRestaurantButton;\n","import React from \"react\";\n\nfunction DirectoryList(props) {\n\n    return (\n        <div className=\"list-group\">\n            {props.children}\n        </div>\n    )\n}\n\nexport default DirectoryList;","import React, { Component } from \"react\";\nimport DropdownCategories from \"./dropdownCategories\";\nimport CheckboxMeals from \"./checkboxMeals\";\nimport UpdateRestaurantButton from \"./directory/updateRestaurantButton\";\nimport TagCategory from \"./tagCategory\";\nimport TagMeal from \"./tagMeal\";\n\nclass RestaurantOptions extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            editMode: false,\n            checkboxSelection: []\n        };\n        this.onEditClick = this.onEditClick.bind(this);\n        this.onSaveClick = this.onSaveClick.bind(this);\n        this.onCancelClick = this.onCancelClick.bind(this);\n        this.onCheckboxClick = this.onCheckboxClick.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({ checkboxSelection: this.props.meal });\n    }\n\n    onEditClick() {\n        this.setState({ editMode: true });\n    }\n    onSaveClick(e) {\n        this.setState({ editMode: false });\n        this.props.onSaveClick({\n            event: e,\n            checkboxSelection: this.state.checkboxSelection\n        });\n    }\n    onCancelClick(e) {\n        this.setState({ editMode: false });\n    }\n\n    onCheckboxClick(e) {\n        let value = e.target.value;\n\n        if (e.target.checked) {\n            this.setState(prevState => ({\n                checkboxSelection: prevState.checkboxSelection ? [...prevState.checkboxSelection, value] : [value]\n            }));\n        } else {\n            this.setState(prevState => {\n                let index = prevState.checkboxSelection.indexOf(value);\n                let arr = prevState.checkboxSelection;\n                arr.splice(index, 1);\n\n                return { checkboxSelection: arr };\n            });\n        }\n    }\n    render() {\n        if (this.props.includeEditButton) {\n            return (\n                <React.Fragment>\n                    {this.state.editMode && (\n                        <React.Fragment>\n                            <DropdownCategories\n                                categories={this.props.categories}\n                                selected={this.props.category}\n                                handleCategoryChange={\n                                    this.props.handleCategoryChange\n                                }\n                            />\n                            <CheckboxMeals\n                                meal={this.props.checkboxmeal}\n                                selected={this.props.meal}\n                                onCheckboxClick={this.onCheckboxClick}\n                            />\n                            <button\n                                className=\"btn btn-primary\"\n                                onClick={this.onSaveClick}\n                                id={this.props.id}\n                                checkboxes={this.state.checkboxSelection}\n                                savetype={this.props.savetype}\n                            >\n                                Save\n                            </button>\n                            <button\n                                className=\"btn btn-secondary\"\n                                onClick={this.onCancelClick}\n                            >\n                                Cancel\n                            </button>\n                        </React.Fragment>\n                    )}\n                    {this.state.editMode === false && (\n                        <React.Fragment>\n                            {this.props.meal &&\n                                this.props.meal.map((i, index) => {\n                                    return <TagMeal key={index} meal={i} />;\n                                })}\n                            <TagCategory category={this.props.category} />\n                            <button onClick={() => this.onEditClick(true)}>\n                                Edit\n                            </button>\n                        </React.Fragment>\n                    )}\n                </React.Fragment>\n            );\n        } else {\n            return (\n                <React.Fragment>\n                    <DropdownCategories\n                        categories={this.props.categories}\n                        selected={false}\n                        handleCategoryChange={this.props.handleCategoryChange}\n                    />\n                    <CheckboxMeals\n                        meal={this.props.checkboxmeal}\n                        selected={false}\n                        onCheckboxClick={this.onCheckboxClick}\n                    />\n                    <button\n                        className=\"btn btn-primary\"\n                        onClick={this.onSaveClick}\n                        id={this.props.id}\n                        checkboxes={this.state.checkboxSelection}\n                        savetype={this.props.savetype}\n                    >\n                        Save\n                    </button>\n                    <button\n                        className=\"btn btn-secondary\"\n                        onClick={this.onCancelClick}\n                    >\n                        Cancel\n                    </button>\n                </React.Fragment>\n            );\n        }\n    }\n}\nexport default RestaurantOptions;\n","import { connect } from \"react-redux\";\nimport * as actions from \"../actions\";\n\nimport React, { Component } from \"react\";\nimport YelpSearchForm from \"../components/directory/yelp/Form\";\nimport YelpSearchResults from \"../components/directory/yelp/Results\";\nimport YelpSearchResult from \"../components/directory/yelp/Result\";\nimport AddedRestaurant from \"../components/directory/addedRestaurant\";\nimport DropdownCategories from \"../components/dropdownCategories\";\nimport CheckboxMeals from \"../components/checkboxMeals\";\nimport UpdateRestaurantButton from \"../components/directory/updateRestaurantButton\";\nimport DeleteRestaurantButton from \"../components/directory/deleteRestaurantButton\";\nimport DirectoryList from \"../components/directory/directoryList\";\nimport RestaurantOptions from \"../components/restaurantOptions\";\n// import TagMeal from \"../components/tagMeal\";\n// import TagCategory from \"../components/tagCategory\";\n\nclass Directory extends Component {\n    constructor() {\n        super();\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.addButtonClick = this.addButtonClick.bind(this);\n        this.handleCategoryChange = this.handleCategoryChange.bind(this);\n        this.onSaveClick = this.onSaveClick.bind(this);\n        this.onDeleteClick = this.onDeleteClick.bind(this);\n    }\n    handleSubmit(e) {\n        e.preventDefault();\n        this.props.dispatch(actions.searchYelp(e.target.keyword.value));\n    }\n    addButtonClick(e) {\n        let i = e.target.getAttribute(\"index\");\n        let restaurant = this.props.results[i];\n        this.props.dispatch(actions.addRestaurant(restaurant));\n    }\n    handleCategoryChange(value) {\n        this.props.dispatch(actions.addCategorySelection(value));\n    }\n    onSaveClick(obj) {\n        let e = obj.event;\n        let id = this.props.addedRestaurant.id\n            ? this.props.addedRestaurant.id\n            : e.target.id;\n        let type = e.target.getAttribute(\"savetype\");\n        let selectedMeal = obj.checkboxSelection;\n        let payload = {\n            id: id,\n            selectedCategories: this.props.selectedCategories,\n            selectedMeal: selectedMeal,\n            type: type\n        };\n\n        this.props.dispatch(actions.updateAddedRestaurant(payload));\n    }\n\n    onDeleteClick(e) {\n        this.props.dispatch(actions.deleteAddedRestaurant(e.target.id));\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                <YelpSearchForm handleSubmit={this.handleSubmit} />\n                {this.props.results.length > 0 && (\n                    <YelpSearchResults>\n                        {this.props.results.map((i, index) => {\n                            return (\n                                <YelpSearchResult name={i.name} key={index}>\n                                    <button\n                                        className=\"btn btn-primary\"\n                                        onClick={this.addButtonClick}\n                                        index={index}\n                                    >\n                                        Add\n                                    </button>\n                                    {/* \n                                        TODO: ADD CANCEL BUTTON\n                                    */}\n                                </YelpSearchResult>\n                            );\n                        })}\n                    </YelpSearchResults>\n                )}\n\n                {this.props.addedRestaurant.name && (\n                    <AddedRestaurant\n                        restaurant={this.props.addedRestaurant}\n                        id={this.props.addedRestaurant.id}\n                    >\n                        <RestaurantOptions\n                            id={this.props.addedRestaurant.id}\n                            categories={this.props.categories}\n                            checkboxmeal={this.props.meal}\n                            handleCategoryChange={this.handleCategoryChange}\n                            onSaveClick={this.onSaveClick}\n                            includeEditButton={false}\n                            savetype=\"yelp\"\n                        />\n\n                        <DeleteRestaurantButton\n                            onDeleteClick={this.onDeleteClick}\n                            id={this.props.addedRestaurant.id}\n                        />\n                    </AddedRestaurant>\n                )}\n\n                {this.props.directoryList.length > 0 && (\n                    <DirectoryList>\n                        {this.props.directoryList.map((i, index) => {\n                            return (\n                                <AddedRestaurant\n                                    key={index}\n                                    restaurant={i}\n                                    id={i.id}\n                                >\n                                    <RestaurantOptions\n                                        id={i.id}\n                                        categories={this.props.categories}\n                                        checkboxmeal={this.props.meal}\n                                        handleCategoryChange={\n                                            this.handleCategoryChange\n                                        }\n                                        onSaveClick={this.onSaveClick}\n                                        meal={i.meal}\n                                        category={i.category}\n                                        includeEditButton={true}\n                                        savetype=\"directory\"\n                                    />\n\n                                    <DeleteRestaurantButton\n                                        onDeleteClick={this.onDeleteClick}\n                                        id={i.id}\n                                    />\n                                </AddedRestaurant>\n                            );\n                        })}\n                    </DirectoryList>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default connect((state, props) => {\n    return {\n        results: state.yelpSearch.results,\n        total: state.yelpSearch.total,\n        addedRestaurant: state.displayAddedRestaurant.addedRestaurant,\n        selectedCategories: state.categorySelection.categoriesSelection,\n        selectedMeal: state.checkboxSelection.selectedCheckboxes,\n        directoryList: state.fetchInitialState.directoryList\n    };\n})(Directory);\n","import \"./App.scss\";\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport TopBar from \"./components/TopBar\";\nimport RandomRestaurant from \"./containers/RandomRestaurant\";\nimport Directory from \"./containers/Directory\";\nimport {BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <div className=\"App\">\n                    <TopBar />\n                    <Switch>\n                        <Route path=\"/\" component={() => \n                            <RandomRestaurant meal={this.props.meal} categories={this.props.categories}/>\n                        } exact />\n                        <Route path=\"/directory\" component={() => \n                            <Directory meal={this.props.meal} categories={this.props.categories} />\n                        } exact />\n                    </Switch>\n                    \n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default connect((state, props) => {\n    return {\n        meal: state.fetchInitialState.meal,\n        categories: state.fetchInitialState.categories\n    };\n})(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/configureStore';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport fetch from 'fetch-everywhere';\n\nlet promises = [fetch(\"/api/meal\"), fetch(\"/api/categories\"), fetch(\"/api/restaurants/list\")];\n\nfunction _fetchInitialStateData() {\n    return Promise.all(\n        promises.map(item =>\n            item.then(data => data.json()).then(result => {\n                return result;\n            })\n        )\n    );\n}\n\n_fetchInitialStateData()\n.then(res => {\n    let data = {};\n    res.map(e => {\n        data[e.type] = e.content;\n        return true;\n    });\n\n    store.dispatch({type:\"FETCH_INITIAL_STATE\", data: data});\n});\n\n\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}